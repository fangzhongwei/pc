// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.2
//
// <auto-generated>
//
// Generated from file `pc.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package RpcPC;

public class DownloadWaterRecordsRequest extends Ice.ObjectImpl
{
    public DownloadWaterRecordsRequest()
    {
        channelCode = "";
        startDate = "";
        endDate = "";
        ext1 = "";
        ext2 = "";
        ext3 = "";
        ext4 = "";
        ext5 = "";
    }

    public DownloadWaterRecordsRequest(String channelCode, String startDate, String endDate, String ext1, String ext2, String ext3, String ext4, String ext5)
    {
        this.channelCode = channelCode;
        this.startDate = startDate;
        this.endDate = endDate;
        this.ext1 = ext1;
        this.ext2 = ext2;
        this.ext3 = ext3;
        this.ext4 = ext4;
        this.ext5 = ext5;
    }

    private static class __F implements Ice.ObjectFactory
    {
        public Ice.Object create(String type)
        {
            assert(type.equals(ice_staticId()));
            return new DownloadWaterRecordsRequest();
        }

        public void destroy()
        {
        }
    }
    private static Ice.ObjectFactory _factory = new __F();

    public static Ice.ObjectFactory
    ice_factory()
    {
        return _factory;
    }

    public static final String[] __ids =
    {
        "::Ice::Object",
        "::RpcPC::DownloadWaterRecordsRequest"
    };

    public boolean ice_isA(String s)
    {
        return java.util.Arrays.binarySearch(__ids, s) >= 0;
    }

    public boolean ice_isA(String s, Ice.Current __current)
    {
        return java.util.Arrays.binarySearch(__ids, s) >= 0;
    }

    public String[] ice_ids()
    {
        return __ids;
    }

    public String[] ice_ids(Ice.Current __current)
    {
        return __ids;
    }

    public String ice_id()
    {
        return __ids[1];
    }

    public String ice_id(Ice.Current __current)
    {
        return __ids[1];
    }

    public static String ice_staticId()
    {
        return __ids[1];
    }

    protected void __writeImpl(IceInternal.BasicStream __os)
    {
        __os.startWriteSlice(ice_staticId(), -1, true);
        __os.writeString(channelCode);
        __os.writeString(startDate);
        __os.writeString(endDate);
        __os.writeString(ext1);
        __os.writeString(ext2);
        __os.writeString(ext3);
        __os.writeString(ext4);
        __os.writeString(ext5);
        __os.endWriteSlice();
    }

    protected void __readImpl(IceInternal.BasicStream __is)
    {
        __is.startReadSlice();
        channelCode = __is.readString();
        startDate = __is.readString();
        endDate = __is.readString();
        ext1 = __is.readString();
        ext2 = __is.readString();
        ext3 = __is.readString();
        ext4 = __is.readString();
        ext5 = __is.readString();
        __is.endReadSlice();
    }

    public String channelCode;

    public String startDate;

    public String endDate;

    public String ext1;

    public String ext2;

    public String ext3;

    public String ext4;

    public String ext5;

    public DownloadWaterRecordsRequest
    clone()
    {
        return (DownloadWaterRecordsRequest)super.clone();
    }

    public static final long serialVersionUID = 1205858568273766996L;
}
